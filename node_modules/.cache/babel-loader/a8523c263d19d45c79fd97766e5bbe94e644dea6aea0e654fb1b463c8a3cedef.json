{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Desktop\\\\Portfolio Website\\\\src\\\\components\\\\TypingAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = ({\n  text,\n  speed = 50,\n  delay = 0,\n  showCursor = true,\n  onComplete = () => {},\n  className = \"\"\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n  useEffect(() => {\n    if (currentIndex < text.length) {\n      const timeout = setTimeout(() => {\n        setDisplayedText(prev => prev + text[currentIndex]);\n        setCurrentIndex(prev => prev + 1);\n      }, speed);\n      return () => clearTimeout(timeout);\n    } else if (!isComplete) {\n      setIsComplete(true);\n      onComplete();\n    }\n  }, [currentIndex, text, speed, isComplete, onComplete]);\n  useEffect(() => {\n    if (delay > 0) {\n      const timeout = setTimeout(() => {\n        setCurrentIndex(0);\n      }, delay);\n      return () => clearTimeout(timeout);\n    } else {\n      setCurrentIndex(0);\n    }\n  }, [delay]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    children: [displayedText, showCursor && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"animate-terminal-blink\",\n      children: \"\\u2588\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingAnimation, \"8eLsPs2cHLX6bMCGmOciSbMix2E=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TypingAnimation","text","speed","delay","showCursor","onComplete","className","_s","displayedText","setDisplayedText","currentIndex","setCurrentIndex","isComplete","setIsComplete","length","timeout","setTimeout","prev","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabri/Desktop/Portfolio Website/src/components/TypingAnimation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TypingAnimation = ({ \r\n  text, \r\n  speed = 50, \r\n  delay = 0, \r\n  showCursor = true,\r\n  onComplete = () => {},\r\n  className = \"\"\r\n}) => {\r\n  const [displayedText, setDisplayedText] = useState('');\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentIndex < text.length) {\r\n      const timeout = setTimeout(() => {\r\n        setDisplayedText(prev => prev + text[currentIndex]);\r\n        setCurrentIndex(prev => prev + 1);\r\n      }, speed);\r\n\r\n      return () => clearTimeout(timeout);\r\n    } else if (!isComplete) {\r\n      setIsComplete(true);\r\n      onComplete();\r\n    }\r\n  }, [currentIndex, text, speed, isComplete, onComplete]);\r\n\r\n  useEffect(() => {\r\n    if (delay > 0) {\r\n      const timeout = setTimeout(() => {\r\n        setCurrentIndex(0);\r\n      }, delay);\r\n      return () => clearTimeout(timeout);\r\n    } else {\r\n      setCurrentIndex(0);\r\n    }\r\n  }, [delay]);\r\n\r\n  return (\r\n    <span className={className}>\r\n      {displayedText}\r\n      {showCursor && <span className=\"animate-terminal-blink\">â–ˆ</span>}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TypingAnimation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGA,CAAC;EACvBC,IAAI;EACJC,KAAK,GAAG,EAAE;EACVC,KAAK,GAAG,CAAC;EACTC,UAAU,GAAG,IAAI;EACjBC,UAAU,GAAGA,CAAA,KAAM,CAAC,CAAC;EACrBC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,IAAIa,YAAY,GAAGT,IAAI,CAACa,MAAM,EAAE;MAC9B,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/BP,gBAAgB,CAACQ,IAAI,IAAIA,IAAI,GAAGhB,IAAI,CAACS,YAAY,CAAC,CAAC;QACnDC,eAAe,CAACM,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MACnC,CAAC,EAAEf,KAAK,CAAC;MAET,OAAO,MAAMgB,YAAY,CAACH,OAAO,CAAC;IACpC,CAAC,MAAM,IAAI,CAACH,UAAU,EAAE;MACtBC,aAAa,CAAC,IAAI,CAAC;MACnBR,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACK,YAAY,EAAET,IAAI,EAAEC,KAAK,EAAEU,UAAU,EAAEP,UAAU,CAAC,CAAC;EAEvDR,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,GAAG,CAAC,EAAE;MACb,MAAMY,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/BL,eAAe,CAAC,CAAC,CAAC;MACpB,CAAC,EAAER,KAAK,CAAC;MACT,OAAO,MAAMe,YAAY,CAACH,OAAO,CAAC;IACpC,CAAC,MAAM;MACLJ,eAAe,CAAC,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,oBACEJ,OAAA;IAAMO,SAAS,EAAEA,SAAU;IAAAa,QAAA,GACxBX,aAAa,EACbJ,UAAU,iBAAIL,OAAA;MAAMO,SAAS,EAAC,wBAAwB;MAAAa,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEX,CAAC;AAAChB,EAAA,CA3CIP,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AA6CrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}